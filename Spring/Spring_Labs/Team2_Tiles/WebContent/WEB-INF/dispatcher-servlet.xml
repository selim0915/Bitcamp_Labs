<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- xml 파일 IOC 컨테이너에 적재될 bean 객체 생성과 injection (DI) 1. 필용한 controller 생성하고 
		bean 객체 생성 , injection 2. 현재 >> 하나의 클래스가 method 단위로 요청을 처리하는 것은 조금 뒤에 ... 
		현재 controller 하나당 요청 하나를 처리 .... 결과 : 하나의 클래스가 method 단위로 요청을 처리 controller 
		요청당 한개 요청 : 게시판 목록보기 (행위 업무) 게시판 글쓰기 게시판 글 수정하기 localhost:8090/website/customer/notice.htm 
		MemberDao 인터페이스 >> 구현 >> NewMemberDao NoticeDao 인터페이스 >> 구현 >> NewNoticeDao 
		NewMemberDao or NewNoticeDao 빈 객체로 생성 **************************************************************** 
		context:component-scan @Component, @Repository, @Service, @Controller, @RestController 
		자동으로 빈객체 생성 만약에 내가 DAO @Repository public class NewMemberDao context:component-scan 
		base-package="dao" -->
	<context:annotation-config />
	<context:component-scan
		base-package="ncontroller" />
	<!-- <bean class="ncontroller.CustomerController"></bean> 자동 -->
	<!-- 모든 컨트롤러가 공통 사용 DAO 빈 객체 참조 -->

	<!-- 게시판 -->
	<!-- <bean id="noticeDao" class="dao.NewNoticeDao"></bean> -->

	<!-- 회원 -->
	<!-- <bean id="memberDao" class="dao.NewMemberDao"></bean> -->

	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/Tiles.xml</value>
			</list>
		</property>
	</bean>
	<bean id="urlBasedViewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.tiles2.TilesView" />
	</bean>

	<!-- 
		public String form() {
			
			return "index.jsp" //Tiles 적용 시점 return 이후에 조합
		}
	 -->
		
</beans> 


