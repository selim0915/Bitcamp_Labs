<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 
		IOC 컨테이너 (Spring 전용 메모리 공간) 안에 생성 될 [객체를 만들고 조립(의존)하는] 하게 설정하는 문서
		=> xml, annotaions
		=> DI_03.xml
		
		:제어의 역전 (프로그램의 제어구조를 바꾼다)
		:작은 단위에 부품을 만들어 놓고, 그것을 조립하는 행위
		
		1. DataSourceFactory 빈객체
		2. properties 파일을 read해서
		3. DataSourceFactory setter 통해서 read한 값을 주입
		
		**Key point
		xml 설정파일에서 특정 자원을 read하려면 context 객체를 사용
		4. context자원을 사용하기 위해서는 xml설정에서 xmlns= 추가 해주어야 한다.
			xmlns:context="http://www.springframework.org/schema/context"
			xsi:schemaLocation="http://www.springframework.org/schema/context
								http://www.springframework.org/schema/context/spring-context.xsd"
		context 접두어요소 사용 가능
		파일기반 작업 : <context:property-placeholder
		${key} >> ${jdbc.driver} >> return >> com.mysql.jdbc.Driver
	 -->
	 
	 <context:property-placeholder location="classpath:DI_11_Spring/jdbc.properties"/>
	 <bean id="dataSourceFactory" class="DI_11_Spring.DataSourceFactory">
	 	<property name="jdbcDriver" value="${jdbc.driver}"></property>
	 	<property name="jdbcUrl" value="${jdbc.url}"></property>
	 	<property name="username" value="${jdbc.username}"></property>
	 	<property name="password" value="${jdbc.password}"></property>
	 </bean>
	 
	 
</beans>