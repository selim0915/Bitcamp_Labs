import java.util.ArrayList;

public class Ex02_ArrayList {

	public static void main(String[] args) {
		ArrayList arraylist = new ArrayList();
		arraylist.add(100);
		arraylist.add(200);
		arraylist.add(300);
		
		System.out.println(arraylist.toString()); //[100, 200, 300]
		//arrayList 클래스도 toString()를 재정의 했다.
		
		for(int i=0; i<arraylist.size(); i++) {
			System.out.println(arraylist.get(i));
		}
		
		System.out.println("현재:[0] "+ arraylist.get(0));
		//add 데이터 추가하는 함수 (기본적인 추가 순차적으로)
		
		//비순차적으로 데이터를 추가하거나 삭제하는 방법
		//추가
		arraylist.add(0,1111); //0번째 방에 1111추가
		System.out.println("add: " + arraylist.toString()); //0번쨰 방에 만들고 원래 값들은 밀려남
		//데이터 삽입 add defualt(맨뒤 순차)
		//데이터 삽입 add 중간에 추가 삭제.. 할수 있다.
		//ArrayList 중간에 데이터를 추가하거나, 삭제하는 작업은 성능에 좋지않다.
		//순차적인 데이터 추가, 삭제는 좋음..!
		
		
		arraylist.remove(2);
		System.out.println("remove: " + arraylist.toString());
		System.out.println("size: "+arraylist.size());

		
		
		//ArrayList 함수
		System.out.println(arraylist.contains(200)); // 값있니? //false
		System.out.println(arraylist.contains(1111)); //true
		
		System.out.println(arraylist.isEmpty()); //빈 값이야? //false
		
		arraylist.clear(); //배열 삭제 (값을 삭제, 크기는 존재)
		System.out.println(arraylist.isEmpty()); //true
		//isEmpty 는 사이즈를 말한다.. 값이 들어있나 안들어있나..
		
		arraylist.add(101);
		arraylist.add(102);
		arraylist.add(103);
		System.out.println("remove: " + arraylist.toString());
		
		
		
	}

}


