importjava.io.ByteArrayInputStream;importjava.io.ByteArrayOutputStream;importjava.util.Arrays;/*I/O1.stream(연결통로,입출력통로,중간매개체)ex)빨대2.stream(통로의크기가정해져있다>>입출력크기가정해져있다.)byte단위로입출력이가능하다.>>Byte배열을가지고활용한다.3.JAVAAPI제공하는입력출력클래스를공부해보자.!Stream(Byte)inputStream(read),outputStream(write)두개의추상클래스는상속을통한재정의가목적(강제구현)대상(memory)ByteArrayInputStream,ByteArrayOutputStream대상(File)FileInputStream,FileOutputStream대상(Piped)PipedInputStream,PipedOutpurStream대상(Audio)AudioInputStream,AudioOutputStream추가적으로도움을주는클래스(성능을좋아지게해주는)Buffer(IO성능향상)BufferedInputStream,BufferedOutputStream*/publicclassEx01_Stream{publicstaticvoidmain(String[]args){//Memory(Array,Collection)//Byte(-128~127)정수값을저장byte[]inSrc={0,1,2,3,4,5,6,7,8,9};System.out.println(inSrc[5]);byte[]outSrc=null;//null를가지는배열은메모리를가지고있지않다.ByteArrayInputStreaminput=null;//ByteArrayInputStream을통해읽어올수있다.ByteArrayOutputStreamoutput=null;//ByteArrayOutputStream데이터통로를통해내보낼수있다.input=newByteArrayInputStream(inSrc);//inSrc배열주소read()output=newByteArrayOutputStream();//write대상이memory라서출력값적지않았다.System.out.println("beforeoutput:"+Arrays.toString(outSrc));//공식같은로직intdata=0;//배열의값이없다는-1//값이있으면계속돌아라~while((data=input.read())!=-1){//read()의리턴타입은정수값이다System.out.println("data:"+data);output.write(data);//data값을자기자신(output)에게내보낸다.//write대사이ByteArrayOutputStreamread()->write}outSrc=output.toByteArray();//자신이가지고있는값을배열형태로만들어서outSrc에게주소값을할당해준다.System.out.println("outSrc:after>>"+Arrays.toString(outSrc));//while(input.read()!=-1){//read()의리턴타입은정수값이다//System.out.println("data:"+input.read());//}/**data:1data:3data:5data:7data:9read()함수는내부적으로next기능을가지고있다.*/}}